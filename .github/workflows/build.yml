name: make binaries

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CC: /usr/local/opt/llvm/bin/clang
      CXX: /usr/local/opt/llvm/bin/clang++
      CIBW_BUILD: cp3[678]*
      CIBW_SKIP: cp31*
    environment: TEST_PYPI_API_TOKEN
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8']
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
          python-version: '3.8'      
    
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel

    - name: Build wheels (ubuntu-latest)        
      if: matrix.os == 'ubuntu-latest'
      run: python -m cibuildwheel --output-dir dist

    - name: Build wheels (macos-latest)
      if: matrix.os == 'macos-latest'
      run: |
        python --version
        brew install llvm
        export LIBRARY_PATH="/usr/local/opt/llvm/lib"
        python -m cibuildwheel --output-dir dist

    - name: Build wheels (windows-latest)      
      if: matrix.os == 'windows-latest'
      run: python -m cibuildwheel --output-dir dist
      
    - name: Install twine
      run: python -m pip install twine

    - name: Upload to TestPyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        TWINE_REPOSITORY: testpypi
        skip_existing: true
      run: |
        echo TWINE_PASSWORD ........... $TWINE_PASSWORD 
        echo TWINE_REPOSITORY ........... $TWINE_REPOSITORY 
        python -m twine upload --skip-existing dist/*
    
    - uses: actions/upload-artifact@v2
      with:
        path: ./dist/*.whl
#######
  test:    
    name: testing on ${{ matrix.os }} and ${{ matrix.python-version }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.6', '3.7.1', '3.8']
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: ./dist/

    - uses: actions/setup-python@v2
      with:
          python-version: ${{ matrix.python-version }}

    - name: installing
      run: pip install --no-index --find-links=dist snipar
    
    - name: testing
      run: python -m unittest snipar.tesets