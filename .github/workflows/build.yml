name: make binaries

on:
  push:
    tags:
      - 'v[0-9]*'

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BUILD: cp3[789]*
    environment: TEST_PYPI_API_TOKEN
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7','3.8','3.9']
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip and build tooling  
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Configure compiler on macOS      
        if: matrix.os == 'macos-latest'
        run: |
          echo "CC=$(xcrun --find clang)" >> $GITHUB_ENV
          echo "CXX=$(xcrun --find clang++)" >> $GITHUB_ENV

      - name: Build wheels                   
        run: python -m cibuildwheel --output-dir dist

      - name: Install twine
        run: python -m pip install twine

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload --skip-existing --verbose dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./dist/*.whl

  update_docs:
    name: Updating docs
    runs-on: ubuntu-latest               
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install docs dependencies      
        run: |
          python -m pip install --upgrade pip build sphinx sphinx_rtd_theme

      - name: Build docs                    
        run: |
          cd docs
          sphinx-apidoc -o . ../snipar/
          make html

      - uses: actions/upload-artifact@v4
        with:
          path: ./docs/_build/