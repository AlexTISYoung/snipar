name: make binaries

on:
  push:
    tags:
    - 'v*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    env:
      CC: /usr/local/opt/llvm/bin/clang
      CXX: /usr/local/opt/llvm/bin/clang++
    environment: TEST_PYPI_API_TOKEN
    strategy:
      matrix:
        os: [macos-latest] #ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
          python-version: ${{ matrix.python-version }}

    - name: Prepare os
      if: matrix.os == 'macOS-latest'
      run: |      
          ls /usr/local/opt/llvm/lib
    #     echo fffffffffffffffffffffff
    #     echo $DYLD_LIBRARY_PATH
    #     brew install llvm libomp
    #     echo libomp.dylib
      
    
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel


    - name: Build wheels
      env:
        DYLD_LIBRARY_PATH: "/usr/local/opt/llvm/lib"
        tmp: "/usr/local/opt/llvm/lib"
        CIBW_BUILD: cp38*
        CIBW_SKIP: cp31*
      run: |
          export DYLD_LIBRARY_PATH="/usr/local/opt/llvm/lib"
          echo 2222222222222
          echo $DYLD_LIBRARY_PATH
          echo 33333333333
          ls $DYLD_LIBRARY_PATH
          echo 444444444444444
          python -m cibuildwheel --output-dir dist

    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true

    - uses: actions/upload-artifact@v2
      with:
        path: ./dist/*.whl
